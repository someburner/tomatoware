## +500 perl/perl-5.27.8/installperl


# Offer to install perl in a "standard" location

my $mainperl_is_instperl = 1;

if ($Config{installusrbinperl} && $Config{installusrbinperl} eq 'define' &&
    !$versiononly && !$opts{notify} && !$Is_W32 && !$Is_NetWare && !$Is_VMS && -t STDIN && -t STDERR
        && -w $mainperldir && ! samepath($mainperldir, $installbin)) {
    my($usrbinperl)     = "$mainperldir/$perl$exe_ext";
    my($instperl)       = "$installbin/$perl$exe_ext";
    my($expinstperl)    = "$binexp/$perl$exe_ext";

    # First make sure $usrbinperl is not already the same as the perl we
    # just installed.
    if (-x $usrbinperl) {
        # Try to be clever about mainperl being a symbolic link
        # to binexp/perl if binexp and installbin are different.
        # $mainperl_is_instperl = 0
            #samepath($usrbinperl, $instperl) ||
            #samepath($usrbinperl, $expinstperl) ||
            # (($binexp ne $installbin) &&
            #  (-l $usrbinperl) &&
            #  ((readlink $usrbinperl) eq $expinstperl));
    }
    if (! $mainperl_is_instperl) {
        unlink($usrbinperl);
        ( $Config{'d_link'} eq 'define' &&
          eval { CORE::link $instperl, $usrbinperl } )  ||
        eval { symlink $expinstperl, $usrbinperl }      ||
        copy($instperl, $usrbinperl);

        $mainperl_is_instperl = 1;
    }
}


